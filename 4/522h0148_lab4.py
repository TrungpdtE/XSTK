# -*- coding: utf-8 -*-
"""522H0148_lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ENC3-hjvxGbGx0dk9fgx05a_ja5AP84a
"""

import numpy as np
import random
import math


#cau1
#a

x = np.random.choice([0, 1, 2, 3, 4, 5], 3650, p=[0.1, 0.2, 0.3, 0.2, 0.15, 0.05])
X = set(x)
print(X)

#b
P = [list(x).count(i) / len(x) for i in X]
print(P)

#c
E_X= 0
for xt in X:
    E_X = E_X +(xt*P[xt-1])
print(E_X)

var_X = 0
for xt in X:
    var_X = var_X +(xt-E_X)*(xt-E_X)*P[xt-1]
print(var_X)

std_X = math.sqrt(var_X)
print(std_X)

#d
P_3_or_more = np.sum(x >= 3) / len(x)
print(P_3_or_more)

import numpy as np
import random
import math
#cau2
#a
x = np.random.choice([0, 1, 2], 10000, p=[0.25, 0.5, 0.25,])
#b
X = set(x)
print(X)

#c
P = [list(x).count(i) / len(x) for i in X]
print(P)

#d
E_X= 0
for xi in X:
    E_X = E_X +(xi*P[xi-1])
print(E_X)

var_X = 0
for xi in X:
    var_X = var_X +(xi-E_X)*(xi-E_X)*P[xi-1]
print(var_X)

std_X = math.sqrt(var_X)
print(std_X)

#e
P_at_least_one_head = np.sum(x > 0) / len(x)
print(P_at_least_one_head)